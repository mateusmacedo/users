version: "3"
services:
  users:
    build: .
    hostname: users
    container_name: users
    restart: always
    command: npm run dev
    environment:
      NODE_ENV: development
      SQL_DB_HOST: postgressql
      NOSQL_DB_HOST: mongodb
      CACHE_HOST: redis
      QUEUE_HOST: rabbitmq
    volumes:
      - .:/home/app
    expose:
      - 3000
    depends_on:
      - postgressql
      - mongodb
      - redis
      - rabbitmq
    networks:
      net:
        ipv4_address: 172.2.1.11
  postgressql:
    image: postgres
    hostname: postgressql
    container_name: postgressql
    restart: always
    environment:
      POSTGRES_PASSWORD: Secret*123
    expose:
      - 5432
    volumes:
      - ./docker/volumes/postgressql/data:/var/lib/postgres/data
    networks:
      net:
        ipv4_address: 172.2.1.21
  mongodb:
    image: mongo
    hostname: mongodb
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: Secret*123
      MONGO_INITDB_DATABASE: users
    ports:
      - 27017
    volumes:
      - ./docker/volumes/mongodb/data:/data/db
      - ./docker/mongo:/docker-entrypoint-initdb.d
    networks:
      net:
        ipv4_address: 172.2.1.31
  redis:
    image: redis
    hostname: redis
    container_name: redis
    restart: always
    volumes:
      - ./docker/volumes/redis:/var/lib/redis
    expose:
      - 6379
    networks:
      net:
        ipv4_address: 172.2.1.41
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    expose:
      - 15672
    volumes:
      - ./docker/volumes/rabbitmq:/var/lib/rabbitmq
    environment:
      - RABBITMQ_ERLANG_COOKIE=Secret*123
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=Secret*123
    networks:
      net:
        ipv4_address: 172.2.1.51
networks:
  net:
    ipam:
      driver: default
      config:
        - subnet: 172.2.1.0/24